
-- 1. Find the item that has the minimum weight:
sql
SELECT ITEMNO, DESCRIPTION, WEIGHT
FROM ITEMS
WHERE WEIGHT = (SELECT MIN(WEIGHT) FROM ITEMS);


-- 2. Find the different warehouses in "Pune":
sql
SELECT DISTINCT WAREHOUSES.WNAME
FROM WAREHOUSES
INNER JOIN CITIES ON WAREHOUSES.CITY = CITIES.CITY
WHERE CITIES.CITY = 'Pune';


-- 3. Find the details of items ordered by a customer named "Mr. Patil":
sql
SELECT CUSTOMER.CNO, CUSTOMER.CNAME, ORDERS.ONO, ITEMS.ITEMNO, ITEMS.DESCRIPTION
FROM CUSTOMER
INNER JOIN ORDERS ON CUSTOMER.CNO = ORDERS.CUSTOMER_ID
INNER JOIN ORDERS_ITEMS ON ORDERS.ONO = ORDERS_ITEMS.ORDER_ID
INNER JOIN ITEMS ON ORDERS_ITEMS.ITEM_ID = ITEMS.ITEMNO
WHERE CUSTOMER.CNAME = 'Mr. Patil';


-- 4. Find a Warehouse that has the maximum number of stores:
sql
SELECT WAREHOUSES.WNAME, COUNT(STORES.SID) AS STORE_COUNT
FROM WAREHOUSES
LEFT JOIN STORES ON WAREHOUSES.WID = STORES.LOCATION_CITY
GROUP BY WAREHOUSES.WID, WAREHOUSES.WNAME
ORDER BY STORE_COUNT DESC
LIMIT 1;


-- 5. Find an item that is ordered for a minimum number of times:
sql
SELECT ITEMS.ITEMNO, ITEMS.DESCRIPTION, COUNT(ORDERS_ITEMS.ORDER_ID) AS ORDER_COUNT
FROM ITEMS
LEFT JOIN ORDERS_ITEMS ON ITEMS.ITEMNO = ORDERS_ITEMS.ITEM_ID
GROUP BY ITEMS.ITEMNO, ITEMS.DESCRIPTION
ORDER BY ORDER_COUNT
LIMIT 1;


-- 6. Find the detailed orders given by each customer:
sql
SELECT CUSTOMER.CNO, CUSTOMER.CNAME, ORDERS.ONO, ORDERS.ODATE, ITEMS.ITEMNO, ITEMS.DESCRIPTION, ORDERS_ITEMS.ORDERED_QUANTITY
FROM CUSTOMER
INNER JOIN ORDERS ON CUSTOMER.CNO = ORDERS.CUSTOMER_ID
INNER JOIN ORDERS_ITEMS ON ORDERS.ONO = ORDERS_ITEMS.ORDER_ID
INNER JOIN ITEMS ON ORDERS_ITEMS.ITEM_ID = ITEMS.ITEMNO;

